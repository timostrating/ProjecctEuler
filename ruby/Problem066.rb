# x**2 - D * y**2 = 1
# 
# 1**2 - 5 * y**2 = 1   (1-1) / 5
# 2**2 - 5 * y**2 = 1   (4-1) / 5
# 3**2 - 5 * y**2 = 1   (9-1) / 5
# 4**2 - 5 * y**2 = 1   (16-1) / 5 = 3  sqrt 3 
# 5**2 - 5 * y**2 = 1   (49-1) / 5
# 6**2 - 5 * y**2 = 1   (49-1) / 5
# 7**2 - 5 * y**2 = 1   (49-1) / 5
# 8**2 - 5 * y**2 = 1   (64-1) / 5 
# 9**2 - 5 * 4**2 = 1   (81-1) / 5 = 16   sqrt 16 = 4   //////////////
# 
max = [0, 0];

def smallestX(d) 
    sum = 0
    ((d-2)..1_000_000).each do |x|
        sum += 1
        if(((x**2 -1) % d == 0) && (Math.sqrt((x**2 -1) / d) % 1 == 0) )
            puts "checks: #{sum} \t\t MAGIC: x % d = #{x % d} \t\t #{x}**2 - #{d} * #{Math.sqrt((x**2 -1) / d)}**2 - 1 = 0 "
            return x 
        end
    end
    return 999999999999999999999999999999999


end

(2..1000).each do |d|
# d = 13
    if(Math.sqrt(d) % 1 != 0)
        value = smallestX(d)
        if max[1] <= value
            puts "  #{d}: #{value}"
            max = [d, value]
        end
    end
end

puts "#{max}"

# checks: 561566           561799**2 - 236 * 36570.0**2 - 1 = 0
#                       315618116401 - 236 * 1337364900 - 1