require "prime"


def factorial(n)
    f = 1
    q = 1
    (1..n).each do |i|
        f *= i
        q *= i
        while q % 10 == 0
            q /= 10
        end

        q %= 100000

        puts "#{q.to_s.rjust(5, "0")} #{(if Prime.prime? i then "--" else "  " end)} #{f}"
    end

    return f
end


factorial(50)


# 00001    1
# 00002 -- 2
# 00006 -- 6
# 00024    24
# 00012 -- 120
# 00072    720
# 00504 -- 5040
# 04032    40320
# 36288    362880
# 36288    3628800
# 99168 -- 39916800
# 90016    479001600
# 70208 -- 6227020800
# 82912    87178291200
# 24368    1307674368000
# 89888    20922789888000
# 28096 -- 355687428096000
# 05728    6402373705728000
# 08832 -- 121645100408832000
# 17664    2432902008176640000
# 70944    51090942171709440000
# 60768    1124000727777607680000
# 97664 -- 25852016738884976640000
# 43936    620448401733239439360000
# 10984    15511210043330985984000000
# 85584    403291461126605635584000000
# 10768    10888869450418352160768000000
# 01504    304888344611713860501504000000
# 43616 -- 8841761993739701954543616000000
# 30848    265252859812191058636308480000000
# 56288 -- 8222838654177922817725562880000000
# 01216    263130836933693530167218012160000000
# 40128    8683317618811886495518194401280000000
# 64352    295232799039604140847618609643520000000
# 25232    10333147966386144929666651337523200000000
# 08352    371993326789901217467999448150835200000000
# 09024 -- 13763753091226345046315979581580902400000000
# 42912    523022617466601111760007224100074291200000000
# 73568    20397882081197443358640281739902897356800000000
# 94272    815915283247897734345611269596115894272000000000
# 65152 -- 33452526613163807108170062053440751665152000000000
# 36384    1405006117752879898543142606244511569936384000000000
# 64512 -- 60415263063373835637355132068513997507264512000000000
# 38528    2658271574788448768043625811014615890319638528000000000
# 73376    119622220865480194561963161495657715064383733760000000000
# 75296    5502622159812088949850305428800254892961651752960000000000
# 38912 -- 258623241511168180642964355153611979969197632389120000000000
# 67776    12413915592536072670862289047373375038521486354677760000000000
# 21024    608281864034267560872252163321295376887552831379210240000000000
# 10512    30414093201713378043612608166064768844377641568960512000000000000